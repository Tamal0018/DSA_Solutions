Reference:- https://takeuforward.org/data-structure/next_permutation-find-next-lexicographically-greater-permutation/
-------- TC:- O(3n) ~ O(n), SC:- O(1) --------

class Solution {
    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    private void reverse(int[] nums, int i) {
        for (int j = nums.length - 1; i < j; i++, j--) {
            swap(nums, i, j);
        }
    }

    public void nextPermutation(int[] nums) {
        int last = nums.length - 1, first = -1;
        for (int i = nums.length - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                first = i;
                break;
            }
        }
        if (first != -1) {
            for (int i = nums.length - 1; i >= 0; i--) {
                if (nums[i] > nums[first]) {
                    last = i;
                    swap(nums, i, first);
                    break;
                }
            }
        }
        reverse(nums, first + 1);
    }
}